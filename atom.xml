<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Luc Dewavrin's weblog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.dewavrin.info/"/>
  <updated>2014-10-04T08:38:32.633Z</updated>
  <id>http://www.dewavrin.info/</id>
  
  <author>
    <name><![CDATA[Luc Dewavrin]]></name>
    
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[svnsync to existing repository]]></title>
    <link href="http://www.dewavrin.info//blog/svnsync-to-existing-repository/"/>
    <id>http://www.dewavrin.info//blog/svnsync-to-existing-repository/</id>
    <published>2012-12-07T23:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Basically I will explain how to synchronize with svnsync on an existing repository. I had trouble to find the info on the Internet so I am sharing it. I am by no mean a subversion administrator therefore if the info is not correct please be kind to let me know.</p>
<p>Yes I know subversion is not really 2013 but recently I had to synchronize a large master subversion repository with a slave. The slave had to be rebuilt from scratch. It turned out that synchronization with svnsync was really too slow to be considered. Therefore to speed up the process. I created a svn repository on the slave machine :</p>
<pre><code>svnadmin <span class="operator"><span class="keyword">create</span> myrepo</span>
</code></pre><p>And synced by dumping and loading through a ssh tunnel :</p>
<pre><code> svnadmin <span class="keyword">dump</span> <span class="regexp">/var/</span>subversion<span class="regexp">/myrepo | ssh remoteuser@remotehost "svnadmin load /</span>var<span class="regexp">/subversion/m</span>yrepo <span class="string">"</span>
</code></pre><p>If you sync with svnsync it will complain that the repository has not been initialized with it (svnsync init). No panic, a bunch of revision properties for revision 0  have to be created.</p>
<p>The properties are:</p>
<ul>
<li>svn:sync-from-uuid : the uuid of the master repository. Can be found with the svn info command.</li>
<li>svn:sync-last-merged-rev : the last merged revision. The synchronization will resume from it. So it has to be set the first time to the last revision, can be retrieved with svn log.</li>
<li>svn:sync-from-url : The URL of the master with the file scheme like file:///var/subversion/myrepo.</li>
</ul>
<p>Set the properties with the user that does the svnsync on the slave repository, example:</p>
<pre><code>svn propset --revprop -r0 svn:sync-<span class="keyword">from</span>-url <span class="string">"file:///var/subversion/myrepo"</span> <span class="keyword">file</span>:<span class="comment">///var/subversion/myrepo --username syncuser</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>Basically I will explain how to synchronize with svnsync on an existing repository. I had trouble to find the info on the Internet so I a]]>
    </summary>
    
      <category term="svn" scheme="http://www.dewavrin.info/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Last post]]></title>
    <link href="http://www.dewavrin.info//blog/last-post/"/>
    <id>http://www.dewavrin.info//blog/last-post/</id>
    <published>2009-09-15T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>I decided to no longer post on my blog due to a serious lack of motivation, time and inspiring topics ;-). Of course, comments will now be closed. As a side note here are the titles of drafts that never turned into posts:</p>
<ul>
<li>Difficulty of choosing a Java web framework</li>
<li>Seam managed persistence context and Spring</li>
<li>Bye Bye computer book shelf</li>
<li>Drools flow or jBPM4 ?</li>
<li>Ejb3 on JBoss with Maven</li>
<li>Creating a Spring based library (with its own context)</li>
<li>Au revoir Windows vista</li>
</ul>
<p><span style="color: red">Update January 4th 2012 : Migrated blog to github.com, revamped it. It is now powered by octopress and statically generated (it used to be fueled by Wordpress) </span></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I decided to no longer post on my blog due to a serious lack of motivation, time and inspiring topics ;-). Of course, comments will now b]]>
    </summary>
    
      <category term="misc" scheme="http://www.dewavrin.info/tags/misc/"/>
    
      <category term="general" scheme="http://www.dewavrin.info/categories/general/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OSGI survey]]></title>
    <link href="http://www.dewavrin.info//blog/osgi-survey/"/>
    <id>http://www.dewavrin.info//blog/osgi-survey/</id>
    <published>2009-05-04T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<iframe src="https://docs.google.com/spreadsheet/embeddedform?formkey=ckhzRjlyekdjYWtGZnlKYlZUYU0zM0E6MA.." width="760" height="344" frameborder="0" marginheight="0" marginwidth="0">Loading…</iframe>

<p>The results:</p>
<p><img src="https://docs.google.com/spreadsheet/oimg?key=0Akkf5_MgAMxgckhzRjlyekdjYWtGZnlKYlZUYU0zM0E&amp;oid=2&amp;zx=2cx0p6mjlgp5" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<iframe src="https://docs.google.com/spreadsheet/embeddedform?formkey=ckhzRjlyekdjYWtGZnlKYlZUYU0zM0E6MA.." width="760" height="344" framebo]]>
    </summary>
    
      <category term="osgi" scheme="http://www.dewavrin.info/tags/osgi/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mimic facelet layouts in grails]]></title>
    <link href="http://www.dewavrin.info//blog/mimic-facelet-layouts-in-grails/"/>
    <id>http://www.dewavrin.info//blog/mimic-facelet-layouts-in-grails/</id>
    <published>2009-04-26T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>I wanted to mimic facelets &lt;ui:insert /&gt; and &lt;ui:define /&gt; tags in grails.I find facelets to be quite powerful because it allows to define a fragment in your template that can be redefined by the view, otherwise a default fragment is displayed.It can be useful for instance for a menu where you want all views to use a default menu and some use another menu. </p>
<p>In facelets, you would create a template file and add a &lt;ui:insert /&gt; statement for the menu, like this:</p>
<figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">ui:insert</span> <span class="attribute">name</span>=<span class="value">"menu"</span>&gt;</span> </div><div class="line">    <span class="tag">&lt;<span class="title">ui:include</span> <span class="attribute">src</span>=<span class="value">"../frags/menu.xhtml"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ui:insert</span>&gt;</span></div></pre></figure><br>Here the <span style="font-weight: bold" class="Apple-style-span">&lt;ui:insert/&gt;</span> statement by default includes with the help of the <span style="font-weight: bold" class="Apple-style-span">&lt;ui:include/&gt;</span>element a menu fragment (a partial page).<br><br>In your view you could if wanted redefine the menu with the <span style="font-weight: bold" class="Apple-style-span">&lt;ui:define/&gt;</span> element, like this:<br><figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">ui:composition</span> <span class="attribute">template</span>=<span class="value">"layout/template.xhtml"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">ui:define</span> <span class="attribute">name</span>=<span class="value">"menu"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">ui:composition</span>&gt;</span></div></pre></figure>

<p><div>Override default menu here </div><br>Grails template system is handled by sitemesh. To achieve the same goal, you can in your template file (layout/main.gsp for instance), add the following element for the menu :</p>
<figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">g:pageproperty</span> <span class="attribute">name</span>=<span class="value">"page.menu"</span> <span class="attribute">default</span>=<span class="value">"${render(template:'/frags/menu')}"</span> /&gt;</span></div></pre></figure>

<p>It achieves the same purpose, actually instead of defining a page section like in facelets, it displays the calling page’s <b>&lt;content&gt;</b> element named menu if present (control is inverted but the result is the same).Otherwise,  if the &lt;content&gt; element is not found,  the menu fragment is rendered.The fragment page should be in our example created in the frags directory under the name _menu.gsp. In your view, you can therefore define the menu section of your template by declaring a content element. </p>
<figure class="highlight html"><pre><div class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="title">head</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"Content-Type"</span> <span class="attribute">content</span>=<span class="value">"text/html; charset=UTF-8"</span> /&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"layout"</span> <span class="attribute">content</span>=<span class="value">"main"</span> /&gt;</span> </div><div class="line">     <span class="tag">&lt;<span class="title">title</span>&gt;</span>Show Book<span class="tag">&lt;/<span class="title">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="title">content</span> <span class="attribute">tag</span>=<span class="value">"menu"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">div</span>&gt;</span>Override default menu here<span class="tag">&lt;/<span class="title">div</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="title">content</span>&gt;</span></div><div class="line">     <span class="comment">&lt;!-- More content here --&gt;</span></div><div class="line">   <span class="tag">&lt;/<span class="title">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>I wanted to mimic facelets &lt;ui:insert /&gt; and &lt;ui:define /&gt; tags in grails.I find facelets to be quite powerful because it all]]>
    </summary>
    
      <category term="grails" scheme="http://www.dewavrin.info/tags/grails/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Acquisition de Sun par Oracle]]></title>
    <link href="http://www.dewavrin.info//blog/acquisition-de-sun-par-oracle/"/>
    <id>http://www.dewavrin.info//blog/acquisition-de-sun-par-oracle/</id>
    <published>2009-04-19T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Pas sûr que Java soit gagnant dans l’histoire. Les incertitudes sur le devenir des produits Java n’est pas fait pour inciter les décideurs à opter pour cette technologie. Quelles sont les futures cibles : SpringSource, Redhat ? Sachant que SpringSource a été largement financé par des VC, à mon avis c’est un bon candidat. Bref, je me mets à la place d’un DSI aujourd’hui; si je ne veux pas prendre de risques j’opte pour .Net et les produits Microsoft : ligne de produits complète, cohérente et intégrée qui ne va pas disparaître d’ici 6 mois (j’exagère un peu…).</p>
<p>Je pense aussi que la période de flottement qui va suivre accentuée en + par une baisse d’investissements liée à la conjoncture va freiner grandement l’innovation autour de la plateforme Java et laisser le champ libre à d’autres technologies. Java n’est pas prêt de combler le retard sur C#. </p>
<p>Bref, sans doute quelques mois difficiles en perspective pour la plateforme Java avant d’y voir + clair.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Pas sûr que Java soit gagnant dans l’histoire. Les incertitudes sur le devenir des produits Java n’est pas fait pour inciter les décideur]]>
    </summary>
    
      <category term="java" scheme="http://www.dewavrin.info/tags/java/"/>
    
      <category term="general" scheme="http://www.dewavrin.info/categories/general/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Seam usage in production]]></title>
    <link href="http://www.dewavrin.info//blog/seam-usage-in-production/"/>
    <id>http://www.dewavrin.info//blog/seam-usage-in-production/</id>
    <published>2009-03-29T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>There ‘s an interesting <a href="http://www.seamframework.org/Community/SeamInProfessionalUse" target="_blank" rel="external">thread</a> on the Seam forum about Seam in “profesional use”. Performance and steep learning curve are often mentioned as drawbacks. </p>
<p>Seam heavily relies on proxy based components created by javassist. And javassist is known to be unperformant <a href="https://jira.jboss.org/jira/browse/JBSEAM-1977" target="_blank" rel="external">compared to cglib</a>. This library might have been chosen due to politic reason at JBoss. Seam Managed Persistence Context (SMPC) is also seen as a culprit but i guess that like many other frameworks you have to understand what’s underneath the carpet, lazy loading in some use cases can really hit performance.</p>
<p>Scalability is not mentioned but i guess that since Seam is stateful it also can be an issue for large websites.</p>
<p>For the learning curve, it might be true if you don’t come from the JavaEE world or have never developed JSF applications. Seam still requires good knowledge of JSF 1.X and how it corrects it in many ways.  The request lifecycle is also complex albeit powerful.Also other “lightweight” JSF based frameworks are quoted like <a href="https://makefaces.dev.java.net/" target="_blank" rel="external">makefaces</a>.</p>
<p>Seam for me is both a IOC container specialized for web development  and a web integration framework of Java EE (Ejb,Web beans), JBoss stack (jBPM, Drools, Richfaces, JSFUnit) and commonly used libraries (quartz,jfreechart, itext, javamail,etc.)  It also addresses many commonly asked features (conversations, mail sending, page caching,etc.)  I am not sure for the future of Seam. Seam 3 might be a complete rewrite due to support of JSF 2 and JSR-299 aka <em>Java Contexts and Dependency Injection</em>, but it is a comprehensive and efficient web framework with a decent IDE (JBoss tools).</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>There ‘s an interesting <a href="http://www.seamframework.org/Community/SeamInProfessionalUse" target="_blank" rel="external">thread</a> ]]>
    </summary>
    
      <category term="seam" scheme="http://www.dewavrin.info/tags/seam/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Economic downturn and impact on javabloggers]]></title>
    <link href="http://www.dewavrin.info//blog/economic-downturn-and-impact-on-javabloggers/"/>
    <id>http://www.dewavrin.info//blog/economic-downturn-and-impact-on-javabloggers/</id>
    <published>2009-02-16T23:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>I wanted to know if the economic crisis had an impact on blogging. I was curious because it seemed for me that the blogs that i usually follow had less activity  . With the help of a groovy script and gchart, here’s the last 2 years monthly blog posts count (don’t know why there’s a high peak for July 07). It seems that, so far, java bloggers still post.</p>
<p><img src="http://chart.apis.google.com/chart?cht=lc&amp;chs=600x500&amp;chtt=Javablogs+monthly+posts+count%20+%7C+since+01-01-2007+to+01-02-2009&amp;chxt=x,y&amp;chxr=1,0,15000&amp;chds=0,15000&amp;chd=t:4224,4133,4758,4474,5561,4933,14719,5155,4515,5301,5047,4862,5341,3975,5278,3826,5527,4271,4471,4305,4548,4480,4347,4993,4520&amp;chxl=0:%7C1-07%7C2%7C3%7C4%7C5%7C6%7C7%7C8%7C9%7C10%7C11%7C12%7C1-08%7C2%7C3%7C4%7C5%7C6%7C7%7C8%7C9%7C10%7C11%7C12%7C1-09" alt=""></p>
<p>For the quality of the blog posts that’s another story but my blog is not a good example ;-)</p>
<p>The source :</p>
<script src="https://gist.github.com/1568387.js"></script>
]]></content>
    <summary type="html">
    <![CDATA[<p>I wanted to know if the economic crisis had an impact on blogging. I was curious because it seemed for me that the blogs that i usually f]]>
    </summary>
    
      <category term="groovy" scheme="http://www.dewavrin.info/tags/groovy/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="general" scheme="http://www.dewavrin.info/categories/java/general/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/general/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JBoss resources]]></title>
    <link href="http://www.dewavrin.info//blog/jboss-resources/"/>
    <id>http://www.dewavrin.info//blog/jboss-resources/</id>
    <published>2009-02-11T23:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>I recently discovered 2 good web sites that provide good JBoss knowledge :</p>
<ul>
<li><a href="http://www.mastertheboss.com" target="_blank" rel="external">Master the boss</a> : especially with articles with jBPM/JBoss ESB integration, jBPM best practices and JBoss AS tuning (a little bit outdated by the way, but still a good resource).</li>
<li><a href="http://enterprisebpm.blogspot.com/" target="_blank" rel="external">Enterprise BPM blog</a> : blog by a Redhat engineer involved in jBPM and WS-BPEL jBPM implementation. It has also links to other jBPM related sites.</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>I recently discovered 2 good web sites that provide good JBoss knowledge :</p>
<ul>
<li><a href="http://www.mastertheboss.com" target="_b]]>
    </summary>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Some Maven tips]]></title>
    <link href="http://www.dewavrin.info//blog/some-maven-tips/"/>
    <id>http://www.dewavrin.info//blog/some-maven-tips/</id>
    <published>2009-02-06T23:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>First post of the year, here are some Maven tips you might find useful (or obvious for experienced users):</p>
<ul>
<li><strong>How to version commercial libraries in your SCM and use them as dependency ?</strong></li>
</ul>
<p>In case you don’t have your own central repository and you’d like to version your libraries in your SCM server, you can declare in your pom a repository like this :</p>
<figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">repository</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">id</span>&gt;</span>sipphonyrepo<span class="tag">&lt;/<span class="title">id</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">url</span>&gt;</span>file:///${basedir}/../repository<span class="tag">&lt;/<span class="title">url</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">repository</span>&gt;</span></div></pre></figure><br>The ‘repository’ directory should be versioned in your scm server but it also means that it should be checked out with your project. Also like any other repository, the dependencies will be copied in your local repository.<br><br><em>  <em>*How to just copy files</em></em> ?<br><br>It might be useful on a development machine to copy files while installing an artifact, for instance you might want to copy a JBoss datasource file to a JBoss profile to make sure it’s deployed.  For this you can use the Maven resource plugins. For instance the following plugin statement will copy the datasource file to your JBoss server’s default profile deployment directory if JBOSS_HOME environment library is defined (on the development machine) :<br><figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">profile</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="title">id</span>&gt;</span>jboss.deploy<span class="tag">&lt;/<span class="title">id</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="title">activation</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="title">property</span>&gt;</span></div><div class="line">     <span class="tag">&lt;<span class="title">name</span>&gt;</span>env.JBOSS_HOME<span class="tag">&lt;/<span class="title">name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="title">property</span>&gt;</span></div><div class="line"> <span class="tag">&lt;/<span class="title">activation</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="title">build</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">plugins</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="title">plugin</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="title">artifactid</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="title">artifactid</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="title">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="title">version</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="title">executions</span>&gt;</span></div><div class="line">           <span class="tag">&lt;<span class="title">execution</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="title">id</span>&gt;</span>copy-ds<span class="tag">&lt;/<span class="title">id</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="title">goals</span>&gt;</span></div><div class="line">               <span class="tag">&lt;<span class="title">goal</span>&gt;</span>copy-resources<span class="tag">&lt;/<span class="title">goal</span>&gt;</span></div><div class="line">             <span class="tag">&lt;/<span class="title">goals</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="title">phase</span>&gt;</span>install<span class="tag">&lt;/<span class="title">phase</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="title">outputdirectory</span>&gt;</span>${env.JBOSS_HOME}/server/default/deploy<span class="tag">&lt;/<span class="title">outputdirectory</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="title">resources</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;<span class="title">resource</span>&gt;</span></div><div class="line">                   <span class="tag">&lt;<span class="title">directory</span>&gt;</span>${basedir}<span class="tag">&lt;/<span class="title">directory</span>&gt;</span></div><div class="line">                   <span class="tag">&lt;<span class="title">includes</span>&gt;</span></div><div class="line">                      <span class="tag">&lt;<span class="title">include</span>&gt;</span>mysql-ds.xml<span class="tag">&lt;/<span class="title">include</span>&gt;</span></div><div class="line">                  <span class="tag">&lt;/<span class="title">includes</span>&gt;</span></div><div class="line">               <span class="tag">&lt;/<span class="title">resource</span>&gt;</span></div><div class="line">               <span class="tag">&lt;/<span class="title">resources</span>&gt;</span></div><div class="line">             <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></div><div class="line">           <span class="tag">&lt;/<span class="title">execution</span>&gt;</span></div><div class="line">         <span class="tag">&lt;/<span class="title">executions</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="title">build</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">profile</span>&gt;</span></div></pre></figure>

<ul>
<li><strong>How to perform complex build build logic ?</strong></li>
</ul>
<p>One solution would be to use profiles for that like in the above example. But it can quickly become cumbersome and limited. So a good option is to use Ant Maven plugin with <a href="http://ant-contrib.sourceforge.net/" target="_blank" rel="external">ant-contribs</a> dependency for control statements and loops or even better the <a href="http://groovy.codehaus.org/GMaven" target="_blank" rel="external">groovy GMaven plugin</a> (avoiding XML verbosity).Profiles have still the benefit of clearly identifying an intent in your build. The following command will list all profiles:</p>
<figure class="highlight bash"><pre><div class="line">mvn <span class="built_in">help</span>:all-profiles</div></pre></figure> 

<p>If build logic can be extracted and used in different contexts, it’s time to create a plugin. It’s quite simple.</p>
<ul>
<li><strong>How to create an artifact of a zip or tar  ?</strong></li>
</ul>
<p>One obvious solution is to use maven assembly plugin but if you need to add some custom logic during packaging, you could just create the zip or tar file with Ant maven plugin or groovy GMaven plugin and gant during the package phase. Then attach the file to your project with Maven <a href="http://mojo.codehaus.org/build-helper-maven-plugin/attach-artifact-mojo.html" target="_blank" rel="external">build helper plugin</a> and its <strong>attach-artifact</strong> goal to install it in your repository during the install phase. Once installed in your local repository, the zip or tar file can be become a dependency, just use the proper type in the dependency declaration.</p>
<figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">type</span>&gt;</span>zip<span class="tag">&lt;/<span class="title">type</span>&gt;</span></div></pre></figure>

<ul>
<li><strong>How to create a full delivery layout with multiple archetype ?</strong></li>
</ul>
<p>My advice for creating a comprehensive delivery directory structure would be to use a dedicated module, take advantage of ant,assembly and resource plugins for that. Struts2 has such a module : <a href="http://svn.apache.org/repos/asf/struts/struts2/trunk/assembly/pom.xml" target="_blank" rel="external">see the assembly module’s pom</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>First post of the year, here are some Maven tips you might find useful (or obvious for experienced users):</p>
<ul>
<li><strong>How to ve]]>
    </summary>
    
      <category term="maven" scheme="http://www.dewavrin.info/tags/maven/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Jaxb bug 527]]></title>
    <link href="http://www.dewavrin.info//blog/jaxb-bug-527/"/>
    <id>http://www.dewavrin.info//blog/jaxb-bug-527/</id>
    <published>2008-10-21T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Please,  if you think you are concerned  vote for the <a href="https://jaxb.dev.java.net/issues/show_bug.cgi?id=527" target="_blank" rel="external">bug</a> i submitted</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Please,  if you think you are concerned  vote for the <a href="https://jaxb.dev.java.net/issues/show_bug.cgi?id=527" target="_blank" rel=]]>
    </summary>
    
      <category term="jaxb" scheme="http://www.dewavrin.info/tags/jaxb/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[SpringSource assouplit sa politique de maintenance]]></title>
    <link href="http://www.dewavrin.info//blog/springsource-assouplit-sa-politique-de-maintenance/"/>
    <id>http://www.dewavrin.info//blog/springsource-assouplit-sa-politique-de-maintenance/</id>
    <published>2008-10-07T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Bon SpringSource a décidé de changer de nouveau la politique de maintenance  de Spring après le tollé suscité parmi ses utilisateurs par la <a href="/?p=248">récente annonce</a>. Plus de limite de 3 mois pour les versions communautaires. Une version majeure sera maintenue pour la communauté jusqu’à la sortie en Release Candidate de la version suivante. +d’infos sur le blog <a href="http://blog.springsource.com/2008/10/07/a-question-of-balance-tuning-the-maintenance-policy/" target="_blank" rel="external">SpringSource</a>.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Bon SpringSource a décidé de changer de nouveau la politique de maintenance  de Spring après le tollé suscité parmi ses utilisateurs par ]]>
    </summary>
    
      <category term="spring" scheme="http://www.dewavrin.info/tags/spring/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring maintenant payant]]></title>
    <link href="http://www.dewavrin.info//blog/changement-de-licence-spring/"/>
    <id>http://www.dewavrin.info//blog/changement-de-licence-spring/</id>
    <published>2008-09-20T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Oui la nouvelle du week-end ou plutot de fin de semaine sur le <a href="http://newblog.springsource.com/2008/05/27/open-source-open-strategy-the-springsource-manifesto/" target="_blank" rel="external">changement de licence de Spring</a> <strong>me reste en travers de la gorge</strong>, même si j’en comprends les raisons.</p>
<p> Mais d’un coup je me sens coupable d’avoir poussé depuis 2004 à l’utilisation de Spring sur plusieurs projets et d’en avoir été le défenseur auprès de certains collègues réticents sur les principes d’injection de dépendances, de conteneur léger et même d’AOP. Sur mes 2 derniers projets, j’ai même introduit Spring Security (anciennement ACEGI) et utilisé Spring MVC pour une petite application interne chez mon employeur précédent. Et oui, le changement de licence s’applique aussi à tous ces projets.Cela me fait maintenant me re-questionner sur l’utilisation de ce framework.</p>
<p>D’abord pourquoi Spring ? Logiquement après avoir lu les livres de Rod Johnson “J2EE design and development” et “J2EE Development without EJB” son utilisation semblait être une vrai alternatives aux Ejb 2.x pour les raisons suivantes :</p>
<ul>
<li>des objets et services métiers n’implémentant aucune interface technique (juste des POJO).</li>
<li>l’injection de dépendances favorisant le couplage faible entre les objets.</li>
<li>les tests unitaires sans déployer dans le conteneur EJB accélérant ainsi les phases de test.</li>
<li>la rapidité de démarrage du conteneur Spring pemettant de l’utiliser en dehors d’un serveur application.<br>Mais Spring est aussi utilisé maintenant pour toutes ses fonctionnalités qui facilitent le développement d’application JavaEE :</li>
<li>son intercepteurs transactionnels et son annotation @Transactional</li>
<li>l’accès aux services des serveurs d’application par simple déclaration  (j2ee:jndi-lookup)</li>
<li><p>la création de proxy sur des Ejb (2.1, 3.0), Web-Services (JAX-RPC et JAXWS) .<br>En fait, j’ai en fait toujours été très satisfait de Spring Core et impressionné par sa stabilité et son excellente documentation tout cela en opensource et gratuit. Les applications développées avec étaient même plus portables que les traditionnelles applications J2EE.  Mais la lune de miel a une fin et je pense maintenant que je vais devoir m’intéresser aux alternatives, car je vois mal certains clients payer pour une librairie (cela changera peut-être pour avec Spring dm Server).</p>
<p><strong>Les alternatives</strong></p>
</li>
</ul>
<p>Pour moi la + évidente :</p>
<ul>
<li><p><strong>JavaEE 5 et les EJB 3</strong><br>Et oui avec des conteneurs d’EJB en mode embedded pouvant être utilisés pour les tests et démarrant en quelques lignes de codes ( voir par exemple <a href="http://openejb.apache.org" target="_blank" rel="external">OpenEJB </a>de la fondation Apache ou encore JBoss embedded ).  De + cette solution a l’immense mérite d’être standard.Maintenant techniquement, le mécanisme d’interception d’EJB 3 n’est pas aussi riche que celui proposé par Spring et son support d’AspectJ. Le mécanisme ne permet d’injecter uniquement des Ejbs ou des ressources JNDI. Mais au moins les tests sans déploiement sont possibles, le code simplifié et épuré. De +, Ejb 3.1 apportent aussi son lot de nouveautés comme l’annotation @Singleton ou la non-obligation de créer une interface métier.</p>
</li>
<li><p><strong>Guice</strong></p>
</li>
</ul>
<p>Peut-être un peu jeune et n’est qu’un “IOC container” mais pourquoi pas pour une utilisation pour des applications standalone. </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Oui la nouvelle du week-end ou plutot de fin de semaine sur le <a href="http://newblog.springsource.com/2008/05/27/open-source-open-strat]]>
    </summary>
    
      <category term="spring" scheme="http://www.dewavrin.info/tags/spring/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Some common JSF pitfalls]]></title>
    <link href="http://www.dewavrin.info//blog/some-common-jsf-pitfalls/"/>
    <id>http://www.dewavrin.info//blog/some-common-jsf-pitfalls/</id>
    <published>2008-08-31T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Well at least here’ s a non exhaustive list of common jsf pitfalls, i felt into (some are variants of others) :</p>
<ul>
<li>Using a converter in  a <strong><em>SelectOneMenu</em></strong> or <strong><em>SelectManyList</em></strong> components, be careful of type being applied. See <a href="http://saloon.javaranch.com/cgi-bin/ubb/ultimatebb.cgi%3Fubb%3Dget_topic%26f%3D82%26t%3D003594+converter+getAsObject+never+called&amp;hl=fr&amp;ct=clnk&amp;cd=1&amp;gl=fr" target="_blank" rel="external">http://saloon.javaranch.com/cgi-bin/ubb/ultimatebb.cgi?ubb=get_topic&amp;f=82&amp;t=003594.</a> Using an array instead of typed collection for the component input values ( still not sure why, have investigated too much on it, so i won’t extend on it)!</li>
<li>Declare a resource bundle in the page ( most of the time bundles are declared in a template page) with the <strong><em>loadbundle</em></strong> element instead of declaring it the faces-config.xml file . If done so, <strong><em>requiredMessage</em></strong> or <strong><em>converterMessage</em></strong> attibutes that can be applied to many UIInput components won’t work (i.e the message won’t be found).</li>
<li>With a <strong><em>commandLink</em></strong> inside dataTables with a bean of request scope actions are not executed. At least it happened to me with JSF RI 1.2_07 and <span class="Apple-style-span" style="text-decoration: line-through">is due to the fact that the id of the dataTable component is changed between the component tree creation (restore view phase) and the render response phase </span><span style="color: red">( Update 09/21/2008 : See more explanations on this in the comment section by Dan Allen himself, author of “Seam in Action” )</span>. When submitted on a post back request, the actions event are not queues (passed as hidden fields). It’s well detailled here <a href="http://typo.ars-subtilior.com/articles/2007/02/07/jsf-datatable-and-commandlink" target="_blank" rel="external">http://typo.ars-subtilior.com/articles/2007/02/07/jsf-datatable-and-commandlink. </a>As a workaround, i used the tomahawk <strong>savestate </strong>component for the elements of the datatable. This component stores the state of objects passed as value expression in the component tree (having a scope that spans between the inital request restore view and post back render response phase) . Seam has a page scope for that.</li>
<li>Validation errors when using a converter in selectOne* components and not overriding the equals() method for the type of object in the list. More explanation here : <a href="http://www.crazysquirrel.com/computing/java/jsf/converter-validation-error.jspx" target="_blank" rel="external">http://www.crazysquirrel.com/computing/java/jsf/converter-validation-error.jspx</a></li>
<li>Saving state on client side with hidden fields and having conversion or validation issues with a backing bean of request scope: state is lost. For instance, you have an <em><strong>inputHidden</strong></em> component in your form and for a reason or another a form’s field has conversion or validation issues. The backing bean of request scope is not updated for the postback request. The bean used to display the response is new and the <strong>inputHidden</strong>‘s field value is reset. Once again this shows a lack of page context for state that needs to be kept between the initial request and the postback request.</li>
<li>Programmatic submission of a web form in javascript through form’s <em>submit</em> method won’t work because the actionlistener is registred on a <strong>commandButton</strong> and when the form is submitted, the submit button parameter is not passed in the request. The button’s action event is not put in the event queue. A workaround is to programmatically click on the form’s command button.</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>Well at least here’ s a non exhaustive list of common jsf pitfalls, i felt into (some are variants of others) :</p>
<ul>
<li>Using a conv]]>
    </summary>
    
      <category term="jsf" scheme="http://www.dewavrin.info/tags/jsf/"/>
    
      <category term="seam" scheme="http://www.dewavrin.info/tags/seam/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Switched to french canadian keyboard]]></title>
    <link href="http://www.dewavrin.info//blog/switched-to-french-canadian-keyboard/"/>
    <id>http://www.dewavrin.info//blog/switched-to-french-canadian-keyboard/</id>
    <published>2008-08-26T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Very interesting news,after a trip to Canada i switched my keyboard layout from french azerty based layout to french canadian. Since it’s a qwerty based layout it might be useful, if one day i have to work abroad. Also it’s more efficient for programming and english writings.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Very interesting news,after a trip to Canada i switched my keyboard layout from french azerty based layout to french canadian. Since it’s]]>
    </summary>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring entityManagerFactory in jta and non-jta modes]]></title>
    <link href="http://www.dewavrin.info//blog/spring-entitymanagerfactory-jta-and-non-jta-modes/"/>
    <id>http://www.dewavrin.info//blog/spring-entitymanagerfactory-jta-and-non-jta-modes/</id>
    <published>2008-06-22T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>This blog post is about using JPA with Spring in 2 contexts :</p>
<ul>
<li>production with a JTA transaction manager</li>
<li>testing with transactions handled by jpa transaction manager.<br>It has been inspired by <a href="http://erich.soomsam.net/2007/04/24/spring-jpa-and-jta-with-hibernate-and-jotm/" target="_blank" rel="external">Erich Soomsam blog post</a>You can achieve such configuration with a PersistenceUnitPostProcessor having a single persistence.xml file and 2 Spring context files (1 for each environment).Since you are likely to have at least 2 different Spring dataSource definitions : 1 for production that performs a JNDI lookup to find a bound datasource and 1 for development that uses a local and Spring declared datasource backed by a JDBC connection pool (C3p0 or DBCP), place the entityManager declaration in the same file as the datasource declaration. Let’s say that the default persistence.xml use the non-jta datasource:<figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">persistence</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/persistence"</span></span></div><div class="line">	<span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">	<span class="attribute">xsi:schemalocation</span>=<span class="value">"http://java.sun.com/xml/ns/persistence    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"</span></div><div class="line">	<span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</div><div class="line">	<span class="tag">&lt;<span class="title">persistence-unit</span> <span class="attribute">transaction-type</span>=<span class="value">"RESOURCE_LOCAL"</span></span></div><div class="line">		<span class="attribute">name</span>=<span class="value">"seamphony"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="title">properties</span>&gt;</span>     <span class="comment">&lt;!-- Scan for annotated classes and Hibernate mapping XML files --&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">value</span>=<span class="value">"class, hbm"</span> <span class="attribute">name</span>=<span class="value">"hibernate.archive.autodetection"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"hibernate.dialect"</span> <span class="attribute">value</span>=<span class="value">"org.hibernate.dialect.MySQLDialect"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">properties</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">persistence-unit</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">persistence</span>&gt;</span></div></pre></figure><br>Here’s how you can use Spring to post process the persistence unit and configure it for production (here with MySQL datasource and JBoss Transaction Manager):<br><figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">bean</span></span></div><div class="line">	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"</div><div class="line">	id="entityManagerFactory"&gt;</div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">ref</span>=<span class="value">"dataSource"</span> <span class="attribute">name</span>=<span class="value">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="title">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"jpaVendorAdapter"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">value</span>=<span class="value">"MYSQL"</span> <span class="attribute">name</span>=<span class="value">"database"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">value</span>=<span class="value">"true"</span> <span class="attribute">name</span>=<span class="value">"showSql"</span> /&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">value</span>=<span class="value">"org.hibernate.dialect.MySQLDialect"</span> <span class="attribute">name</span>=<span class="value">"databasePlatform"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">bean</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"jpaPropertyMap"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">map</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">entry</span> <span class="attribute">value</span>=<span class="value">"org.hibernate.transaction.JBossTransactionManagerLookup"</span></span></div><div class="line">		<span class="attribute">key</span>=<span class="value">"hibernate.transaction.manager_lookup_class"</span>&gt;</div><div class="line">		<span class="tag">&lt;<span class="title">entry</span> <span class="attribute">value</span>=<span class="value">"true"</span> <span class="attribute">key</span>=<span class="value">"hibernate.transaction.flush_before_completion"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">entry</span> <span class="attribute">value</span>=<span class="value">"true"</span> <span class="attribute">key</span>=<span class="value">"hibernate.transaction.auto_close_session"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">entry</span> <span class="attribute">value</span>=<span class="value">"jta"</span> <span class="attribute">key</span>=<span class="value">"hibernate.current_session_context_class"</span> /&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">entry</span> <span class="attribute">value</span>=<span class="value">"auto"</span> <span class="attribute">key</span>=<span class="value">"hibernate.connection.release_mode"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">entry</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">map</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"persistenceUnitPostProcessors"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">list</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"JtaPersistenceUnitPostProcessor"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">value</span>=<span class="value">"true"</span> <span class="attribute">name</span>=<span class="value">"jtaMode"</span>&gt;</span><span class="tag">&lt;/<span class="title">property</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">property</span> <span class="attribute">ref</span>=<span class="value">"dataSource"</span> <span class="attribute">name</span>=<span class="value">"jtaDataSource"</span>&gt;</span><span class="tag">&lt;/<span class="title">property</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">bean</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">list</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">property</span>&gt;</span><span class="comment">&lt;!-- Datasource Lookup --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"org.springframework.jndi.JndiObjectFactoryBean"</span> <span class="attribute">id</span>=<span class="value">"dataSource"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"resourceRef"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">value</span>&gt;</span>false<span class="tag">&lt;/<span class="title">value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"jndiName"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">value</span>&gt;</span>java:/MyDS<span class="tag">&lt;/<span class="title">value</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">bean</span>&gt;</span><span class="comment">&lt;!-- Transaction Manager --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">bean</span> <span class="attribute">class</span>=<span class="value">"org.springframework.transaction.jta.JtaTransactionManager"</span></span></div><div class="line">	<span class="attribute">id</span>=<span class="value">"transactionManager"</span>&gt;</div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">value</span>=<span class="value">"java:/TransactionManager"</span> <span class="attribute">name</span>=<span class="value">"transactionManagerName"</span> /&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">property</span> <span class="attribute">value</span>=<span class="value">"false"</span> <span class="attribute">name</span>=<span class="value">"autodetectUserTransaction"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">bean</span>&gt;</span></div></pre></figure>

</li>
</ul>
<p>Here’s the class that reads the jta mode property and configure the transaction type accordingly:</p>
<figure class="highlight java"><pre><div class="line"><span class="keyword">import</span> javax.persistence.spi.PersistenceUnitTransactionType;</div><div class="line"><span class="keyword">import</span> javax.sql.DataSource;</div><div class="line"><span class="keyword">import</span> org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JtaPersistenceUnitPostProcessor</span> <span class="keyword">implements</span></span></div><div class="line">		<span class="title">PersistenceUnitPostProcessor</span> {</div><div class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> jtaMode = <span class="keyword">false</span>;</div><div class="line">	<span class="keyword">private</span> DataSource jtaDataSource;</div><div class="line">	<span class="keyword">private</span> PersistenceUnitTransactionType transacType = PersistenceUnitTransactionType.RESOURCE_LOCAL;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postProcessPersistenceUnitInfo</span>(</div><div class="line">			MutablePersistenceUnitInfo mutablePersistenceUnitInfo) {</div><div class="line">		<span class="keyword">if</span> (jtaMode) {</div><div class="line">			transacType = PersistenceUnitTransactionType.JTA;</div><div class="line">			mutablePersistenceUnitInfo</div><div class="line">					.setJtaDataSource(<span class="keyword">this</span>.getJtaDataSource());</div><div class="line">		}</div><div class="line">		mutablePersistenceUnitInfo.setTransactionType(transacType);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isJtaMode</span>() {</div><div class="line">		<span class="keyword">return</span> jtaMode;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJtaMode</span>(<span class="keyword">boolean</span> jtaMode) {</div><div class="line">		<span class="keyword">this</span>.jtaMode = jtaMode;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">public</span> DataSource <span class="title">getJtaDataSource</span>() {</div><div class="line">		<span class="keyword">return</span> jtaDataSource;</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setJtaDataSource</span>(DataSource jtaDataSource) {</div><div class="line">		<span class="keyword">this</span>.jtaDataSource = jtaDataSource;</div><div class="line">	}</div><div class="line">}</div></pre></figure>

<p>Spring really helps tuning your persistence unit for different environments. It could be achieved by a custom build task that could alter the persistence.xml file but since this example assumes that Spring is already used, it can be avoided.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This blog post is about using JPA with Spring in 2 contexts :</p>
<ul>
<li>production with a JTA transaction manager</li>
<li>testing wit]]>
    </summary>
    
      <category term="jpa" scheme="http://www.dewavrin.info/tags/jpa/"/>
    
      <category term="spring" scheme="http://www.dewavrin.info/tags/spring/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="general" scheme="http://www.dewavrin.info/categories/java/general/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/general/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Stat your commits]]></title>
    <link href="http://www.dewavrin.info//blog/stat-your-commits/"/>
    <id>http://www.dewavrin.info//blog/stat-your-commits/</id>
    <published>2008-06-01T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>I recently discover the <a href="http://stat-scm.sourceforge.net/" target="_blank" rel="external">StatSCM</a> maven plugin and it made our team day . It gives useful information about your Subversion activity (it supports other SCM systems) giving precise developers activity information or file statistics. It also generates some nice charts. I found it very useful to monitor what the team members commit: for instance we discovered that a trainee was the developer of the month (ranked by LOC commited) because he commited some very large csv test files.First to enable it, configure the dependency and declare the report in the reports section of your maven parent pom file:</p>
<p><figure class="highlight xml"><pre><div class="line"><span class="tag">&lt;<span class="title">pom</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">build</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">plugins</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="title">groupid</span>&gt;</span>net.sf<span class="tag">&lt;/<span class="title">groupid</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="title">artifactid</span>&gt;</span>stat-scm<span class="tag">&lt;/<span class="title">artifactid</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></div><div class="line">						<span class="tag">&lt;<span class="title">groupid</span>&gt;</span>net.sf<span class="tag">&lt;/<span class="title">groupid</span>&gt;</span></div><div class="line">						<span class="tag">&lt;<span class="title">artifactid</span>&gt;</span>stat-svn<span class="tag">&lt;/<span class="title">artifactid</span>&gt;</span></div><div class="line">						<span class="tag">&lt;<span class="title">version</span>&gt;</span>0.4.0-StatSCM<span class="tag">&lt;/<span class="title">version</span>&gt;</span></div><div class="line">					<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></div><div class="line">						<span class="tag">&lt;<span class="title">groupid</span>&gt;</span>org.apache.maven.reporting<span class="tag">&lt;/<span class="title">groupid</span>&gt;</span></div><div class="line">						<span class="tag">&lt;<span class="title">artifactid</span>&gt;</span>maven-reporting-impl<span class="tag">&lt;/<span class="title">artifactid</span>&gt;</span></div><div class="line">						<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.0.4<span class="tag">&lt;/<span class="title">version</span>&gt;</span></div><div class="line">					<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">build</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="title">reporting</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="title">plugins</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="title">plugin</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="title">groupid</span>&gt;</span>net.sf<span class="tag">&lt;/<span class="title">groupid</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="title">artifactid</span>&gt;</span>stat-scm<span class="tag">&lt;/<span class="title">artifactid</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="title">configuration</span>&gt;</span></div><div class="line">					<span class="tag">&lt;<span class="title">excludes</span>&gt;</span></div><div class="line">						<span class="tag">&lt;<span class="title">exclude</span>&gt;</span>**/*.csv<span class="tag">&lt;/<span class="title">exclude</span>&gt;</span></div><div class="line">					<span class="tag">&lt;/<span class="title">excludes</span>&gt;</span></div><div class="line">				<span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="title">reporting</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">pom</span>&gt;</span>	</div></pre></figure><br>And here some charts produced, like the number of LOC commited by each developer:<a href="http://www.dewavrin.info/images/custom/loc.png" target="_blank" rel="external"><img src="http://www.dewavrin.info/images/custom/loc.png" alt="Number of lines of code" title="Number of lines of code"></a>The  day commit activity:<a href="http://www.dewavrin.info/images/custom/commitsactivity.png" target="_blank" rel="external"><img src="http://www.dewavrin.info/images/custom/commitsactivity.png" alt="Commits activity" title="Commits activity"></a>Or the ration between files addition/modification:<a href="http://www.dewavrin.info/images/custom/activity.png" target="_blank" rel="external"><img src="http://www.dewavrin.info/images/custom/activity.png" alt=""></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I recently discover the <a href="http://stat-scm.sourceforge.net/" target="_blank" rel="external">StatSCM</a> maven plugin and it made ou]]>
    </summary>
    
      <category term="maven" scheme="http://www.dewavrin.info/tags/maven/"/>
    
      <category term="subversion" scheme="http://www.dewavrin.info/tags/subversion/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HP about to buy EDS]]></title>
    <link href="http://www.dewavrin.info//blog/hp-about-to-buy-eds/"/>
    <id>http://www.dewavrin.info//blog/hp-about-to-buy-eds/</id>
    <published>2008-05-11T22:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Concentration in IT goes on ( is it an effect of a “SAAS strategy” ?):<a href="http://news.yahoo.com/s/nm/20080512/bs_nm/eds_hewlettpackard_dc_1" target="_blank" rel="external">http://news.yahoo.com/s/nm/20080512/bs_nm/eds_hewlettpackard_dc_1</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Concentration in IT goes on ( is it an effect of a “SAAS strategy” ?):<a href="http://news.yahoo.com/s/nm/20080512/bs_nm/eds_hewlettpacka]]>
    </summary>
    
      <category term="general" scheme="http://www.dewavrin.info/categories/general/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/general/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Opensource Java BPM compared]]></title>
    <link href="http://www.dewavrin.info//blog/opensource-java-bpm-compared/"/>
    <id>http://www.dewavrin.info//blog/opensource-java-bpm-compared/</id>
    <published>2008-01-16T23:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>(Seen on jBPM mailing-list): a quite interesting study between the non-exhaustive Java BPM engines (jBPM, enhydra shark, openwfe) has been published. Follow this <a href="http://www.workflowpatterns.com/documentation/documents/BPM-07-12.pdf" target="_blank" rel="external">link</a>.Updated 2008/08 : The report has been updated (see <a href="http://www.infoq.com/news/2008/08/oswf" target="_blank" rel="external">http://www.infoq.com/news/2008/08/oswf</a>)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>(Seen on jBPM mailing-list): a quite interesting study between the non-exhaustive Java BPM engines (jBPM, enhydra shark, openwfe) has bee]]>
    </summary>
    
      <category term="jBPM" scheme="http://www.dewavrin.info/tags/jBPM/"/>
    
      <category term="java" scheme="http://www.dewavrin.info/categories/java/"/>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/java/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IT consolidation]]></title>
    <link href="http://www.dewavrin.info//blog/it-consolidation/"/>
    <id>http://www.dewavrin.info//blog/it-consolidation/</id>
    <published>2008-01-15T23:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>Todays news:<strong>Oracle buys BEA.**</strong>Mysql AB acquired by Sun.**Well what’s next? Redhat acquired by Sun (or even Microsoft), Adobe acquired by Oracle, etc ?Industralization of the IT sector seems to get some steam, surely a sign of maturity. I am not sure if it will have an impact on innovation or this trend is the result of a loss of innovation. Big actors want to provide a complete enterprise stack from hardware to software package solutions. Will we only have to deal with SAP, Oracle, IBM, Sun and Microsoft tomorrow ?Google strategy seems to differentiate and focus on online services.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Todays news:<strong>Oracle buys BEA.**</strong>Mysql AB acquired by Sun.**Well what’s next? Redhat acquired by Sun (or even Microsoft), A]]>
    </summary>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[A picture is worth a thousand words (my 2008 no interest techs list)]]></title>
    <link href="http://www.dewavrin.info//blog/a-picture-is-worth-a-thousand-words-my-2008-no-interest-techs-list/"/>
    <id>http://www.dewavrin.info//blog/a-picture-is-worth-a-thousand-words-my-2008-no-interest-techs-list/</id>
    <published>2008-01-02T23:00:00.000Z</published>
    <updated>2014-10-04T08:04:12.000Z</updated>
    <content type="html"><![CDATA[<p>This comic sums up my opinion on Scala pretty well (very funny):<a href="http://stuffthathappens.com/blog/2008/01/02/scala-will-do/" target="_blank" rel="external">http://stuffthathappens.com/blog/2008/01/02/scala-will-do/</a>I jumped on Ruby and Rails bandwagon spending some man-days (;-)) on it but at least Rails has been a reference in term of web productivity and introduced or leveraged nice concepts (naming conventions over configuration, DSL, REST, TDD etc.) . Recently, many Java web frameworks compared themselves to Rails and how they were much better (Seam,Grails &amp; Co). Rails influenced the IT community (Java, .Net and Python included).=&gt; All in all, i have excuses to have followed the crowd…  But not this time, Scala (pretty unreadable), JavaFx (not until i see <a href="http://weblogs.java.net/blog/chet/archive/2007/05/consumer_jre_le.html" target="_blank" rel="external">the consumer jre</a> in action and applets as fast-loaded as flash apps without dumb dialog boxes) are definitely on my 2008 technos of no-interest !I’ll hopefully focus this year on the new Cobol ;-) core (or even .Net/C#) .</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This comic sums up my opinion on Scala pretty well (very funny):<a href="http://stuffthathappens.com/blog/2008/01/02/scala-will-do/" targ]]>
    </summary>
    
      <category term="tech" scheme="http://www.dewavrin.info/categories/tech/"/>
    
  </entry>
  
</feed>
